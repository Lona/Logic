// Generated by Lona Compiler 0.9.1

import AppKit
import Foundation

// MARK: - SuggestionSearchBar

public class SuggestionSearchBar: NSBox {

  // MARK: Lifecycle

  public init(_ parameters: Parameters) {
    self.parameters = parameters

    super.init(frame: .zero)

    setUpViews()
    setUpConstraints()

    update()
  }

  public convenience init(
    showsDropdown: Bool,
    showsOverflowMenu: Bool,
    searchText: String,
    placeholderText: String?,
    tokenText: String?,
    dropdownIndex: Int,
    dropdownValues: [String],
    dropdownKeyEquivalents: [String])
  {
    self
      .init(
        Parameters(
          showsDropdown: showsDropdown,
          showsOverflowMenu: showsOverflowMenu,
          searchText: searchText,
          placeholderText: placeholderText,
          tokenText: tokenText,
          dropdownIndex: dropdownIndex,
          dropdownValues: dropdownValues,
          dropdownKeyEquivalents: dropdownKeyEquivalents))
  }

  public convenience init() {
    self.init(Parameters())
  }

  public required init?(coder aDecoder: NSCoder) {
    self.parameters = Parameters()

    super.init(coder: aDecoder)

    setUpViews()
    setUpConstraints()

    update()
  }

  // MARK: Public

  public var showsDropdown: Bool {
    get { return parameters.showsDropdown }
    set {
      if parameters.showsDropdown != newValue {
        parameters.showsDropdown = newValue
      }
    }
  }

  public var showsOverflowMenu: Bool {
    get { return parameters.showsOverflowMenu }
    set {
      if parameters.showsOverflowMenu != newValue {
        parameters.showsOverflowMenu = newValue
      }
    }
  }

  public var searchText: String {
    get { return parameters.searchText }
    set {
      if parameters.searchText != newValue {
        parameters.searchText = newValue
      }
    }
  }

  public var placeholderText: String? {
    get { return parameters.placeholderText }
    set {
      if parameters.placeholderText != newValue {
        parameters.placeholderText = newValue
      }
    }
  }

  public var tokenText: String? {
    get { return parameters.tokenText }
    set {
      if parameters.tokenText != newValue {
        parameters.tokenText = newValue
      }
    }
  }

  public var dropdownIndex: Int {
    get { return parameters.dropdownIndex }
    set {
      if parameters.dropdownIndex != newValue {
        parameters.dropdownIndex = newValue
      }
    }
  }

  public var dropdownValues: [String] {
    get { return parameters.dropdownValues }
    set {
      if parameters.dropdownValues != newValue {
        parameters.dropdownValues = newValue
      }
    }
  }

  public var dropdownKeyEquivalents: [String] {
    get { return parameters.dropdownKeyEquivalents }
    set {
      if parameters.dropdownKeyEquivalents != newValue {
        parameters.dropdownKeyEquivalents = newValue
      }
    }
  }

  public var onSubmit: (() -> Void)? {
    get { return parameters.onSubmit }
    set { parameters.onSubmit = newValue }
  }

  public var onChangeSearchText: ((String) -> Void)? {
    get { return parameters.onChangeSearchText }
    set { parameters.onChangeSearchText = newValue }
  }

  public var onPressUpKey: (() -> Void)? {
    get { return parameters.onPressUpKey }
    set { parameters.onPressUpKey = newValue }
  }

  public var onPressDownKey: (() -> Void)? {
    get { return parameters.onPressDownKey }
    set { parameters.onPressDownKey = newValue }
  }

  public var onPressEscapeKey: (() -> Void)? {
    get { return parameters.onPressEscapeKey }
    set { parameters.onPressEscapeKey = newValue }
  }

  public var onPressTabKey: (() -> Void)? {
    get { return parameters.onPressTabKey }
    set { parameters.onPressTabKey = newValue }
  }

  public var onPressShiftTabKey: (() -> Void)? {
    get { return parameters.onPressShiftTabKey }
    set { parameters.onPressShiftTabKey = newValue }
  }

  public var onPressCommandUpKey: (() -> Void)? {
    get { return parameters.onPressCommandUpKey }
    set { parameters.onPressCommandUpKey = newValue }
  }

  public var onPressCommandDownKey: (() -> Void)? {
    get { return parameters.onPressCommandDownKey }
    set { parameters.onPressCommandDownKey = newValue }
  }

  public var onOpenDropdown: (() -> Void)? {
    get { return parameters.onOpenDropdown }
    set { parameters.onOpenDropdown = newValue }
  }

  public var onCloseDropdown: (() -> Void)? {
    get { return parameters.onCloseDropdown }
    set { parameters.onCloseDropdown = newValue }
  }

  public var onSelectDropdownIndex: ((Int) -> Void)? {
    get { return parameters.onSelectDropdownIndex }
    set { parameters.onSelectDropdownIndex = newValue }
  }

  public var onHighlightDropdownIndex: ((Int?) -> Void)? {
    get { return parameters.onHighlightDropdownIndex }
    set { parameters.onHighlightDropdownIndex = newValue }
  }

  public var onPressOverflowMenu: (() -> Void)? {
    get { return parameters.onPressOverflowMenu }
    set { parameters.onPressOverflowMenu = newValue }
  }

  public var onPressToken: (() -> Void)? {
    get { return parameters.onPressToken }
    set { parameters.onPressToken = newValue }
  }

  public var parameters: Parameters {
    didSet {
      if parameters != oldValue {
        update()
      }
    }
  }

  // MARK: Private

  private var tokenContainerView = NSBox()
  private var searchBarTokenView = SearchBarToken()
  private var searchInputContainerView = NSBox()
  private var searchInputView = ControlledSearchInput()
  private var controlledDropdownContainerView = NSBox()
  private var controlledDropdownView = ControlledDropdown()
  var overflowMenuContainerView = NSBox()
  private var overflowMenuButtonView = OverflowMenuButton()

  private var searchInputContainerViewLeadingAnchorLeadingAnchorConstraint: NSLayoutConstraint?
  private var searchInputContainerViewTrailingAnchorTrailingAnchorConstraint: NSLayoutConstraint?
  private var tokenContainerViewLeadingAnchorLeadingAnchorConstraint: NSLayoutConstraint?
  private var tokenContainerViewTopAnchorTopAnchorConstraint: NSLayoutConstraint?
  private var tokenContainerViewBottomAnchorBottomAnchorConstraint: NSLayoutConstraint?
  private var searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint: NSLayoutConstraint?
  private var searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint: NSLayoutConstraint?
  private var searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint: NSLayoutConstraint?
  private var searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint: NSLayoutConstraint?
  private var searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint: NSLayoutConstraint?
  private var searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuContainerViewTopAnchorTopAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuContainerViewBottomAnchorBottomAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuButtonViewHeightAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuButtonViewWidthAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownContainerViewTrailingAnchorTrailingAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownContainerViewTopAnchorTopAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint: NSLayoutConstraint?
  private var controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint: NSLayoutConstraint?
  private var overflowMenuContainerViewLeadingAnchorControlledDropdownContainerViewTrailingAnchorConstraint: NSLayoutConstraint?

  private func setUpViews() {
    boxType = .custom
    borderType = .noBorder
    contentViewMargins = .zero
    tokenContainerView.boxType = .custom
    tokenContainerView.borderType = .noBorder
    tokenContainerView.contentViewMargins = .zero
    searchInputContainerView.boxType = .custom
    searchInputContainerView.borderType = .noBorder
    searchInputContainerView.contentViewMargins = .zero
    controlledDropdownContainerView.boxType = .custom
    controlledDropdownContainerView.borderType = .noBorder
    controlledDropdownContainerView.contentViewMargins = .zero
    overflowMenuContainerView.boxType = .custom
    overflowMenuContainerView.borderType = .noBorder
    overflowMenuContainerView.contentViewMargins = .zero

    addSubview(tokenContainerView)
    addSubview(searchInputContainerView)
    addSubview(controlledDropdownContainerView)
    addSubview(overflowMenuContainerView)
    tokenContainerView.addSubview(searchBarTokenView)
    searchInputContainerView.addSubview(searchInputView)
    controlledDropdownContainerView.addSubview(controlledDropdownView)
    overflowMenuContainerView.addSubview(overflowMenuButtonView)
  }

  private func setUpConstraints() {
    translatesAutoresizingMaskIntoConstraints = false
    tokenContainerView.translatesAutoresizingMaskIntoConstraints = false
    searchInputContainerView.translatesAutoresizingMaskIntoConstraints = false
    controlledDropdownContainerView.translatesAutoresizingMaskIntoConstraints = false
    overflowMenuContainerView.translatesAutoresizingMaskIntoConstraints = false
    searchBarTokenView.translatesAutoresizingMaskIntoConstraints = false
    searchInputView.translatesAutoresizingMaskIntoConstraints = false
    controlledDropdownView.translatesAutoresizingMaskIntoConstraints = false
    overflowMenuButtonView.translatesAutoresizingMaskIntoConstraints = false

    let heightAnchorConstraint = heightAnchor.constraint(equalToConstant: 32)
    let searchInputContainerViewTopAnchorConstraint = searchInputContainerView.topAnchor.constraint(equalTo: topAnchor)
    let searchInputContainerViewBottomAnchorConstraint = searchInputContainerView
      .bottomAnchor
      .constraint(equalTo: bottomAnchor)
    let searchInputViewTopAnchorConstraint = searchInputView
      .topAnchor
      .constraint(equalTo: searchInputContainerView.topAnchor, constant: 5)
    let searchInputViewBottomAnchorConstraint = searchInputView
      .bottomAnchor
      .constraint(equalTo: searchInputContainerView.bottomAnchor, constant: -5)
    let searchInputViewLeadingAnchorConstraint = searchInputView
      .leadingAnchor
      .constraint(equalTo: searchInputContainerView.leadingAnchor, constant: 10)
    let searchInputViewTrailingAnchorConstraint = searchInputView
      .trailingAnchor
      .constraint(equalTo: searchInputContainerView.trailingAnchor, constant: -10)
    let searchInputContainerViewLeadingAnchorLeadingAnchorConstraint = searchInputContainerView
      .leadingAnchor
      .constraint(equalTo: leadingAnchor)
    let searchInputContainerViewTrailingAnchorTrailingAnchorConstraint = searchInputContainerView
      .trailingAnchor
      .constraint(equalTo: trailingAnchor)
    let tokenContainerViewLeadingAnchorLeadingAnchorConstraint = tokenContainerView
      .leadingAnchor
      .constraint(equalTo: leadingAnchor)
    let tokenContainerViewTopAnchorTopAnchorConstraint = tokenContainerView.topAnchor.constraint(equalTo: topAnchor)
    let tokenContainerViewBottomAnchorBottomAnchorConstraint = tokenContainerView
      .bottomAnchor
      .constraint(equalTo: bottomAnchor)
    let searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint = searchInputContainerView
      .leadingAnchor
      .constraint(equalTo: tokenContainerView.trailingAnchor)
    let searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint = searchBarTokenView
      .leadingAnchor
      .constraint(equalTo: tokenContainerView.leadingAnchor, constant: 10)
    let searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint = searchBarTokenView
      .trailingAnchor
      .constraint(equalTo: tokenContainerView.trailingAnchor)
    let searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint = searchBarTokenView
      .topAnchor
      .constraint(greaterThanOrEqualTo: tokenContainerView.topAnchor)
    let searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint = searchBarTokenView
      .centerYAnchor
      .constraint(equalTo: tokenContainerView.centerYAnchor)
    let searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint = searchBarTokenView
      .bottomAnchor
      .constraint(lessThanOrEqualTo: tokenContainerView.bottomAnchor)
    let overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint = overflowMenuContainerView
      .trailingAnchor
      .constraint(equalTo: trailingAnchor)
    let overflowMenuContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint = overflowMenuContainerView
      .leadingAnchor
      .constraint(equalTo: searchInputContainerView.trailingAnchor)
    let overflowMenuContainerViewTopAnchorTopAnchorConstraint = overflowMenuContainerView
      .topAnchor
      .constraint(equalTo: topAnchor)
    let overflowMenuContainerViewBottomAnchorBottomAnchorConstraint = overflowMenuContainerView
      .bottomAnchor
      .constraint(equalTo: bottomAnchor)
    let overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint = overflowMenuButtonView
      .leadingAnchor
      .constraint(equalTo: overflowMenuContainerView.leadingAnchor, constant: 5)
    let overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint = overflowMenuButtonView
      .trailingAnchor
      .constraint(equalTo: overflowMenuContainerView.trailingAnchor, constant: -10)
    let overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint = overflowMenuButtonView
      .centerYAnchor
      .constraint(equalTo: overflowMenuContainerView.centerYAnchor)
    let overflowMenuButtonViewHeightAnchorConstraint = overflowMenuButtonView
      .heightAnchor
      .constraint(equalToConstant: 13)
    let overflowMenuButtonViewWidthAnchorConstraint = overflowMenuButtonView.widthAnchor.constraint(equalToConstant: 23)
    let controlledDropdownContainerViewTrailingAnchorTrailingAnchorConstraint = controlledDropdownContainerView
      .trailingAnchor
      .constraint(equalTo: trailingAnchor)
    let controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint = controlledDropdownContainerView
      .leadingAnchor
      .constraint(equalTo: searchInputContainerView.trailingAnchor)
    let controlledDropdownContainerViewTopAnchorTopAnchorConstraint = controlledDropdownContainerView
      .topAnchor
      .constraint(equalTo: topAnchor)
    let controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint = controlledDropdownContainerView
      .bottomAnchor
      .constraint(equalTo: bottomAnchor)
    let controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint = controlledDropdownView
      .leadingAnchor
      .constraint(equalTo: controlledDropdownContainerView.leadingAnchor, constant: 5)
    let controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint = controlledDropdownView
      .trailingAnchor
      .constraint(equalTo: controlledDropdownContainerView.trailingAnchor, constant: -5)
    let controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint = controlledDropdownView
      .topAnchor
      .constraint(greaterThanOrEqualTo: controlledDropdownContainerView.topAnchor)
    let controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint = controlledDropdownView
      .centerYAnchor
      .constraint(equalTo: controlledDropdownContainerView.centerYAnchor)
    let controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint = controlledDropdownView
      .bottomAnchor
      .constraint(lessThanOrEqualTo: controlledDropdownContainerView.bottomAnchor)
    let overflowMenuContainerViewLeadingAnchorControlledDropdownContainerViewTrailingAnchorConstraint = overflowMenuContainerView
      .leadingAnchor
      .constraint(equalTo: controlledDropdownContainerView.trailingAnchor)

    self.searchInputContainerViewLeadingAnchorLeadingAnchorConstraint =
      searchInputContainerViewLeadingAnchorLeadingAnchorConstraint
    self.searchInputContainerViewTrailingAnchorTrailingAnchorConstraint =
      searchInputContainerViewTrailingAnchorTrailingAnchorConstraint
    self.tokenContainerViewLeadingAnchorLeadingAnchorConstraint = tokenContainerViewLeadingAnchorLeadingAnchorConstraint
    self.tokenContainerViewTopAnchorTopAnchorConstraint = tokenContainerViewTopAnchorTopAnchorConstraint
    self.tokenContainerViewBottomAnchorBottomAnchorConstraint = tokenContainerViewBottomAnchorBottomAnchorConstraint
    self.searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint =
      searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint
    self.searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint =
      searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint
    self.searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint =
      searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint
    self.searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint =
      searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint
    self.searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint =
      searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint
    self.searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint =
      searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint
    self.overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint =
      overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint
    self.overflowMenuContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint =
      overflowMenuContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint
    self.overflowMenuContainerViewTopAnchorTopAnchorConstraint = overflowMenuContainerViewTopAnchorTopAnchorConstraint
    self.overflowMenuContainerViewBottomAnchorBottomAnchorConstraint =
      overflowMenuContainerViewBottomAnchorBottomAnchorConstraint
    self.overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint =
      overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint
    self.overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint =
      overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint
    self.overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint =
      overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint
    self.overflowMenuButtonViewHeightAnchorConstraint = overflowMenuButtonViewHeightAnchorConstraint
    self.overflowMenuButtonViewWidthAnchorConstraint = overflowMenuButtonViewWidthAnchorConstraint
    self.controlledDropdownContainerViewTrailingAnchorTrailingAnchorConstraint =
      controlledDropdownContainerViewTrailingAnchorTrailingAnchorConstraint
    self.controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint =
      controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint
    self.controlledDropdownContainerViewTopAnchorTopAnchorConstraint =
      controlledDropdownContainerViewTopAnchorTopAnchorConstraint
    self.controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint =
      controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint
    self.controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint =
      controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint
    self.controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint =
      controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint
    self.controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint =
      controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint
    self.controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint =
      controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint
    self.controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint =
      controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint
    self.overflowMenuContainerViewLeadingAnchorControlledDropdownContainerViewTrailingAnchorConstraint =
      overflowMenuContainerViewLeadingAnchorControlledDropdownContainerViewTrailingAnchorConstraint

    NSLayoutConstraint.activate(
      [
        heightAnchorConstraint,
        searchInputContainerViewTopAnchorConstraint,
        searchInputContainerViewBottomAnchorConstraint,
        searchInputViewTopAnchorConstraint,
        searchInputViewBottomAnchorConstraint,
        searchInputViewLeadingAnchorConstraint,
        searchInputViewTrailingAnchorConstraint
      ] +
        conditionalConstraints(
          controlledDropdownContainerViewIsHidden: controlledDropdownContainerView.isHidden,
          overflowMenuContainerViewIsHidden: overflowMenuContainerView.isHidden,
          tokenContainerViewIsHidden: tokenContainerView.isHidden))
  }

  private func conditionalConstraints(
    controlledDropdownContainerViewIsHidden: Bool,
    overflowMenuContainerViewIsHidden: Bool,
    tokenContainerViewIsHidden: Bool) -> [NSLayoutConstraint]
  {
    var constraints: [NSLayoutConstraint?]

    switch (controlledDropdownContainerViewIsHidden, overflowMenuContainerViewIsHidden, tokenContainerViewIsHidden) {
      case (true, true, true):
        constraints = [
          searchInputContainerViewLeadingAnchorLeadingAnchorConstraint,
          searchInputContainerViewTrailingAnchorTrailingAnchorConstraint
        ]
      case (true, true, false):
        constraints = [
          tokenContainerViewLeadingAnchorLeadingAnchorConstraint,
          tokenContainerViewTopAnchorTopAnchorConstraint,
          tokenContainerViewBottomAnchorBottomAnchorConstraint,
          searchInputContainerViewTrailingAnchorTrailingAnchorConstraint,
          searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint,
          searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint,
          searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint,
          searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint,
          searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint,
          searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint
        ]
      case (true, false, true):
        constraints = [
          searchInputContainerViewLeadingAnchorLeadingAnchorConstraint,
          overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint,
          overflowMenuContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint,
          overflowMenuContainerViewTopAnchorTopAnchorConstraint,
          overflowMenuContainerViewBottomAnchorBottomAnchorConstraint,
          overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint,
          overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint,
          overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint,
          overflowMenuButtonViewHeightAnchorConstraint,
          overflowMenuButtonViewWidthAnchorConstraint
        ]
      case (false, true, true):
        constraints = [
          searchInputContainerViewLeadingAnchorLeadingAnchorConstraint,
          controlledDropdownContainerViewTrailingAnchorTrailingAnchorConstraint,
          controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint,
          controlledDropdownContainerViewTopAnchorTopAnchorConstraint,
          controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint,
          controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint,
          controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint,
          controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint,
          controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint,
          controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint
        ]
      case (false, true, false):
        constraints = [
          tokenContainerViewLeadingAnchorLeadingAnchorConstraint,
          tokenContainerViewTopAnchorTopAnchorConstraint,
          tokenContainerViewBottomAnchorBottomAnchorConstraint,
          searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint,
          controlledDropdownContainerViewTrailingAnchorTrailingAnchorConstraint,
          controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint,
          controlledDropdownContainerViewTopAnchorTopAnchorConstraint,
          controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint,
          searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint,
          searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint,
          searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint,
          searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint,
          searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint,
          controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint,
          controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint,
          controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint,
          controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint,
          controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint
        ]
      case (true, false, false):
        constraints = [
          tokenContainerViewLeadingAnchorLeadingAnchorConstraint,
          tokenContainerViewTopAnchorTopAnchorConstraint,
          tokenContainerViewBottomAnchorBottomAnchorConstraint,
          searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint,
          overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint,
          overflowMenuContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint,
          overflowMenuContainerViewTopAnchorTopAnchorConstraint,
          overflowMenuContainerViewBottomAnchorBottomAnchorConstraint,
          searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint,
          searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint,
          searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint,
          searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint,
          searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint,
          overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint,
          overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint,
          overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint,
          overflowMenuButtonViewHeightAnchorConstraint,
          overflowMenuButtonViewWidthAnchorConstraint
        ]
      case (false, false, true):
        constraints = [
          searchInputContainerViewLeadingAnchorLeadingAnchorConstraint,
          controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint,
          controlledDropdownContainerViewTopAnchorTopAnchorConstraint,
          controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint,
          overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint,
          overflowMenuContainerViewLeadingAnchorControlledDropdownContainerViewTrailingAnchorConstraint,
          overflowMenuContainerViewTopAnchorTopAnchorConstraint,
          overflowMenuContainerViewBottomAnchorBottomAnchorConstraint,
          controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint,
          controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint,
          controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint,
          controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint,
          controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint,
          overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint,
          overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint,
          overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint,
          overflowMenuButtonViewHeightAnchorConstraint,
          overflowMenuButtonViewWidthAnchorConstraint
        ]
      case (false, false, false):
        constraints = [
          tokenContainerViewLeadingAnchorLeadingAnchorConstraint,
          tokenContainerViewTopAnchorTopAnchorConstraint,
          tokenContainerViewBottomAnchorBottomAnchorConstraint,
          searchInputContainerViewLeadingAnchorTokenContainerViewTrailingAnchorConstraint,
          controlledDropdownContainerViewLeadingAnchorSearchInputContainerViewTrailingAnchorConstraint,
          controlledDropdownContainerViewTopAnchorTopAnchorConstraint,
          controlledDropdownContainerViewBottomAnchorBottomAnchorConstraint,
          overflowMenuContainerViewTrailingAnchorTrailingAnchorConstraint,
          overflowMenuContainerViewLeadingAnchorControlledDropdownContainerViewTrailingAnchorConstraint,
          overflowMenuContainerViewTopAnchorTopAnchorConstraint,
          overflowMenuContainerViewBottomAnchorBottomAnchorConstraint,
          searchBarTokenViewLeadingAnchorTokenContainerViewLeadingAnchorConstraint,
          searchBarTokenViewTrailingAnchorTokenContainerViewTrailingAnchorConstraint,
          searchBarTokenViewTopAnchorTokenContainerViewTopAnchorConstraint,
          searchBarTokenViewCenterYAnchorTokenContainerViewCenterYAnchorConstraint,
          searchBarTokenViewBottomAnchorTokenContainerViewBottomAnchorConstraint,
          controlledDropdownViewLeadingAnchorControlledDropdownContainerViewLeadingAnchorConstraint,
          controlledDropdownViewTrailingAnchorControlledDropdownContainerViewTrailingAnchorConstraint,
          controlledDropdownViewTopAnchorControlledDropdownContainerViewTopAnchorConstraint,
          controlledDropdownViewCenterYAnchorControlledDropdownContainerViewCenterYAnchorConstraint,
          controlledDropdownViewBottomAnchorControlledDropdownContainerViewBottomAnchorConstraint,
          overflowMenuButtonViewLeadingAnchorOverflowMenuContainerViewLeadingAnchorConstraint,
          overflowMenuButtonViewTrailingAnchorOverflowMenuContainerViewTrailingAnchorConstraint,
          overflowMenuButtonViewCenterYAnchorOverflowMenuContainerViewCenterYAnchorConstraint,
          overflowMenuButtonViewHeightAnchorConstraint,
          overflowMenuButtonViewWidthAnchorConstraint
        ]
    }

    return constraints.compactMap({ $0 })
  }

  private func update() {
    let controlledDropdownContainerViewIsHidden = controlledDropdownContainerView.isHidden
    let overflowMenuContainerViewIsHidden = overflowMenuContainerView.isHidden
    let tokenContainerViewIsHidden = tokenContainerView.isHidden

    searchBarTokenView.titleText = "Text"
    tokenContainerView.isHidden = !false
    if let tokenText = tokenText {
      searchBarTokenView.titleText = tokenText
      tokenContainerView.isHidden = !true
    }
    controlledDropdownView.selectedIndex = dropdownIndex
    controlledDropdownView.keyEquivalents = dropdownKeyEquivalents
    controlledDropdownView.values = dropdownValues
    searchInputView.onChangeTextValue = handleOnChangeSearchText
    controlledDropdownView.onCloseMenu = handleOnCloseDropdown
    controlledDropdownView.onHighlightIndex = handleOnHighlightDropdownIndex
    controlledDropdownView.onOpenMenu = handleOnOpenDropdown
    searchInputView.onPressCommandDownKey = handleOnPressCommandDownKey
    searchInputView.onPressCommandUpKey = handleOnPressCommandUpKey
    searchInputView.onPressDownKey = handleOnPressDownKey
    searchInputView.onPressEscape = handleOnPressEscapeKey
    overflowMenuButtonView.onPressButton = handleOnPressOverflowMenu
    searchInputView.onPressShiftTab = handleOnPressShiftTabKey
    searchInputView.onPressTab = handleOnPressTabKey
    searchBarTokenView.onPressToken = handleOnPressToken
    searchInputView.onPressUpKey = handleOnPressUpKey
    controlledDropdownView.onChangeIndex = handleOnSelectDropdownIndex
    searchInputView.onSubmit = handleOnSubmit
    searchInputView.placeholderText = placeholderText
    searchInputView.textValue = searchText
    controlledDropdownContainerView.isHidden = !showsDropdown
    overflowMenuContainerView.isHidden = !showsOverflowMenu

    if
    controlledDropdownContainerView.isHidden != controlledDropdownContainerViewIsHidden ||
      overflowMenuContainerView.isHidden != overflowMenuContainerViewIsHidden ||
        tokenContainerView.isHidden != tokenContainerViewIsHidden
    {
      NSLayoutConstraint.deactivate(
        conditionalConstraints(
          controlledDropdownContainerViewIsHidden: controlledDropdownContainerViewIsHidden,
          overflowMenuContainerViewIsHidden: overflowMenuContainerViewIsHidden,
          tokenContainerViewIsHidden: tokenContainerViewIsHidden))
      NSLayoutConstraint.activate(
        conditionalConstraints(
          controlledDropdownContainerViewIsHidden: controlledDropdownContainerView.isHidden,
          overflowMenuContainerViewIsHidden: overflowMenuContainerView.isHidden,
          tokenContainerViewIsHidden: tokenContainerView.isHidden))
    }
  }

  private func handleOnSubmit() {
    onSubmit?()
  }

  private func handleOnChangeSearchText(_ arg0: String) {
    onChangeSearchText?(arg0)
  }

  private func handleOnPressUpKey() {
    onPressUpKey?()
  }

  private func handleOnPressDownKey() {
    onPressDownKey?()
  }

  private func handleOnPressEscapeKey() {
    onPressEscapeKey?()
  }

  private func handleOnPressTabKey() {
    onPressTabKey?()
  }

  private func handleOnPressShiftTabKey() {
    onPressShiftTabKey?()
  }

  private func handleOnPressCommandUpKey() {
    onPressCommandUpKey?()
  }

  private func handleOnPressCommandDownKey() {
    onPressCommandDownKey?()
  }

  private func handleOnOpenDropdown() {
    onOpenDropdown?()
  }

  private func handleOnCloseDropdown() {
    onCloseDropdown?()
  }

  private func handleOnSelectDropdownIndex(_ arg0: Int) {
    onSelectDropdownIndex?(arg0)
  }

  private func handleOnHighlightDropdownIndex(_ arg0: Int?) {
    onHighlightDropdownIndex?(arg0)
  }

  private func handleOnPressOverflowMenu() {
    onPressOverflowMenu?()
  }

  private func handleOnPressToken() {
    onPressToken?()
  }
}

// MARK: - Parameters

extension SuggestionSearchBar {
  public struct Parameters: Equatable {
    public var showsDropdown: Bool
    public var showsOverflowMenu: Bool
    public var searchText: String
    public var placeholderText: String?
    public var tokenText: String?
    public var dropdownIndex: Int
    public var dropdownValues: [String]
    public var dropdownKeyEquivalents: [String]
    public var onSubmit: (() -> Void)?
    public var onChangeSearchText: ((String) -> Void)?
    public var onPressUpKey: (() -> Void)?
    public var onPressDownKey: (() -> Void)?
    public var onPressEscapeKey: (() -> Void)?
    public var onPressTabKey: (() -> Void)?
    public var onPressShiftTabKey: (() -> Void)?
    public var onPressCommandUpKey: (() -> Void)?
    public var onPressCommandDownKey: (() -> Void)?
    public var onOpenDropdown: (() -> Void)?
    public var onCloseDropdown: (() -> Void)?
    public var onSelectDropdownIndex: ((Int) -> Void)?
    public var onHighlightDropdownIndex: ((Int?) -> Void)?
    public var onPressOverflowMenu: (() -> Void)?
    public var onPressToken: (() -> Void)?

    public init(
      showsDropdown: Bool,
      showsOverflowMenu: Bool,
      searchText: String,
      placeholderText: String? = nil,
      tokenText: String? = nil,
      dropdownIndex: Int,
      dropdownValues: [String],
      dropdownKeyEquivalents: [String],
      onSubmit: (() -> Void)? = nil,
      onChangeSearchText: ((String) -> Void)? = nil,
      onPressUpKey: (() -> Void)? = nil,
      onPressDownKey: (() -> Void)? = nil,
      onPressEscapeKey: (() -> Void)? = nil,
      onPressTabKey: (() -> Void)? = nil,
      onPressShiftTabKey: (() -> Void)? = nil,
      onPressCommandUpKey: (() -> Void)? = nil,
      onPressCommandDownKey: (() -> Void)? = nil,
      onOpenDropdown: (() -> Void)? = nil,
      onCloseDropdown: (() -> Void)? = nil,
      onSelectDropdownIndex: ((Int) -> Void)? = nil,
      onHighlightDropdownIndex: ((Int?) -> Void)? = nil,
      onPressOverflowMenu: (() -> Void)? = nil,
      onPressToken: (() -> Void)? = nil)
    {
      self.showsDropdown = showsDropdown
      self.showsOverflowMenu = showsOverflowMenu
      self.searchText = searchText
      self.placeholderText = placeholderText
      self.tokenText = tokenText
      self.dropdownIndex = dropdownIndex
      self.dropdownValues = dropdownValues
      self.dropdownKeyEquivalents = dropdownKeyEquivalents
      self.onSubmit = onSubmit
      self.onChangeSearchText = onChangeSearchText
      self.onPressUpKey = onPressUpKey
      self.onPressDownKey = onPressDownKey
      self.onPressEscapeKey = onPressEscapeKey
      self.onPressTabKey = onPressTabKey
      self.onPressShiftTabKey = onPressShiftTabKey
      self.onPressCommandUpKey = onPressCommandUpKey
      self.onPressCommandDownKey = onPressCommandDownKey
      self.onOpenDropdown = onOpenDropdown
      self.onCloseDropdown = onCloseDropdown
      self.onSelectDropdownIndex = onSelectDropdownIndex
      self.onHighlightDropdownIndex = onHighlightDropdownIndex
      self.onPressOverflowMenu = onPressOverflowMenu
      self.onPressToken = onPressToken
    }

    public init() {
      self
        .init(
          showsDropdown: false,
          showsOverflowMenu: false,
          searchText: "",
          placeholderText: nil,
          tokenText: nil,
          dropdownIndex: 0,
          dropdownValues: [],
          dropdownKeyEquivalents: [])
    }

    public static func ==(lhs: Parameters, rhs: Parameters) -> Bool {
      return lhs.showsDropdown == rhs.showsDropdown &&
        lhs.showsOverflowMenu == rhs.showsOverflowMenu &&
          lhs.searchText == rhs.searchText &&
            lhs.placeholderText == rhs.placeholderText &&
              lhs.tokenText == rhs.tokenText &&
                lhs.dropdownIndex == rhs.dropdownIndex &&
                  lhs.dropdownValues == rhs.dropdownValues && lhs.dropdownKeyEquivalents == rhs.dropdownKeyEquivalents
    }
  }
}

// MARK: - Model

extension SuggestionSearchBar {
  public struct Model: LonaViewModel, Equatable {
    public var id: String?
    public var parameters: Parameters
    public var type: String {
      return "SuggestionSearchBar"
    }

    public init(id: String? = nil, parameters: Parameters) {
      self.id = id
      self.parameters = parameters
    }

    public init(_ parameters: Parameters) {
      self.parameters = parameters
    }

    public init(
      showsDropdown: Bool,
      showsOverflowMenu: Bool,
      searchText: String,
      placeholderText: String? = nil,
      tokenText: String? = nil,
      dropdownIndex: Int,
      dropdownValues: [String],
      dropdownKeyEquivalents: [String],
      onSubmit: (() -> Void)? = nil,
      onChangeSearchText: ((String) -> Void)? = nil,
      onPressUpKey: (() -> Void)? = nil,
      onPressDownKey: (() -> Void)? = nil,
      onPressEscapeKey: (() -> Void)? = nil,
      onPressTabKey: (() -> Void)? = nil,
      onPressShiftTabKey: (() -> Void)? = nil,
      onPressCommandUpKey: (() -> Void)? = nil,
      onPressCommandDownKey: (() -> Void)? = nil,
      onOpenDropdown: (() -> Void)? = nil,
      onCloseDropdown: (() -> Void)? = nil,
      onSelectDropdownIndex: ((Int) -> Void)? = nil,
      onHighlightDropdownIndex: ((Int?) -> Void)? = nil,
      onPressOverflowMenu: (() -> Void)? = nil,
      onPressToken: (() -> Void)? = nil)
    {
      self
        .init(
          Parameters(
            showsDropdown: showsDropdown,
            showsOverflowMenu: showsOverflowMenu,
            searchText: searchText,
            placeholderText: placeholderText,
            tokenText: tokenText,
            dropdownIndex: dropdownIndex,
            dropdownValues: dropdownValues,
            dropdownKeyEquivalents: dropdownKeyEquivalents,
            onSubmit: onSubmit,
            onChangeSearchText: onChangeSearchText,
            onPressUpKey: onPressUpKey,
            onPressDownKey: onPressDownKey,
            onPressEscapeKey: onPressEscapeKey,
            onPressTabKey: onPressTabKey,
            onPressShiftTabKey: onPressShiftTabKey,
            onPressCommandUpKey: onPressCommandUpKey,
            onPressCommandDownKey: onPressCommandDownKey,
            onOpenDropdown: onOpenDropdown,
            onCloseDropdown: onCloseDropdown,
            onSelectDropdownIndex: onSelectDropdownIndex,
            onHighlightDropdownIndex: onHighlightDropdownIndex,
            onPressOverflowMenu: onPressOverflowMenu,
            onPressToken: onPressToken))
    }

    public init() {
      self
        .init(
          showsDropdown: false,
          showsOverflowMenu: false,
          searchText: "",
          placeholderText: nil,
          tokenText: nil,
          dropdownIndex: 0,
          dropdownValues: [],
          dropdownKeyEquivalents: [])
    }
  }
}

// LONA: KEEP BELOW

extension SuggestionSearchBar {
    public var searchInput: ControlledSearchInput {
        return searchInputView
    }

    public var overflowMenuBounds: NSRect {
        return overflowMenuContainerView.bounds
    }
}
