<?xml version="1.0"?>
<root>
  <NativeType name="UUID"/>
  <NativeType name="Bool"/>
  <NativeType name="CGFloat"/>
  <NativeType name="String"/>
  <NativeType name="Optional">
    <NativeType.GenericParam type="Value"/>
  </NativeType>
  <Type name="List">
    <Case name="next">
      <Case.GenericParam type="T"/>
      <Case.Param type="List"/>
    </Case>
    <Case name="empty"/>
  </Type>
  <Type name="Identifier">
    <Record name="identifier">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="string" type="String"/>
      <Record.Param name="isPlaceholder" type="Bool"/>
    </Record>
  </Type>
  <Type name="Declaration">
    <Record name="variable">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
      <Record.Param name="annotation" type="Optional">
        <Record.Substitution generic="Value" instance="TypeAnnotation"/>
      </Record.Param>
      <Record.Param name="initializer" type="Optional">
        <Record.Substitution generic="Value" instance="Expression"/>
      </Record.Param>
      <Record.Param name="comment" type="Optional">
        <Record.Substitution generic="Value" instance="Comment"/>
      </Record.Param>
    </Record>
    <Record name="function">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
      <Record.Param name="returnType" type="TypeAnnotation"/>
      <Record.Param name="genericParameters" type="List">
        <Record.Substitution generic="T" instance="GenericParameter"/>
      </Record.Param>
      <Record.Param name="parameters" type="List">
        <Record.Substitution generic="T" instance="FunctionParameter"/>
      </Record.Param>
      <Record.Param name="block" type="List">
        <Record.Substitution generic="T" instance="Statement"/>
      </Record.Param>
    </Record>
    <Record name="enumeration">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
      <Record.Param name="genericParameters" type="List">
        <Record.Substitution generic="T" instance="GenericParameter"/>
      </Record.Param>
      <Record.Param name="cases" type="List">
        <Record.Substitution generic="T" instance="EnumerationCase"/>
      </Record.Param>
    </Record>
    <Record name="namespace">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
      <Record.Param name="declarations" type="List">
        <Record.Substitution generic="T" instance="Declaration"/>
      </Record.Param>
    </Record>
    <Record name="placeholder">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="record">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
      <Record.Param name="genericParameters" type="List">
        <Record.Substitution generic="T" instance="GenericParameter"/>
      </Record.Param>
      <Record.Param name="declarations" type="List">
        <Record.Substitution generic="T" instance="Declaration"/>
      </Record.Param>
    </Record>
    <Record name="importDeclaration">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
    </Record>
  </Type>
  <Type name="EnumerationCase">
    <Record name="placeholder">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="enumerationCase">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
      <Record.Param name="associatedValueTypes" type="List">
        <Record.Substitution generic="T" instance="TypeAnnotation"/>
      </Record.Param>
    </Record>
  </Type>
  <Type name="Pattern">
    <Record name="pattern">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="String"/>
    </Record>
  </Type>
  <Type name="BinaryOperator">
    <Record name="isEqualTo">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="isNotEqualTo">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="isLessThan">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="isGreaterThan">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="isLessThanOrEqualTo">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="isGreaterThanOrEqualTo">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="setEqualTo">
      <Record.Param name="id" type="UUID"/>
    </Record>
  </Type>
  <Type name="FunctionCallArgument">
    <Record name="functionCallArgument">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="label" type="Optional">
        <Record.Substitution generic="Value" instance="String"/>
      </Record.Param>
      <Record.Param name="expression" type="Expression"/>
    </Record>
  </Type>
  <Type name="Expression">
    <Record name="binaryExpression">
      <Record.Param name="left" type="Expression"/>
      <Record.Param name="right" type="Expression"/>
      <Record.Param name="op" type="BinaryOperator"/>
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="identifierExpression">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="identifier" type="Identifier"/>
    </Record>
    <Record name="functionCallExpression">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="expression" type="Expression"/>
      <Record.Param name="arguments" type="List">
        <Record.Substitution generic="T" instance="FunctionCallArgument"/>
      </Record.Param>
    </Record>
    <Record name="literalExpression">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="literal" type="Literal"/>
    </Record>
    <Record name="memberExpression">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="expression" type="Expression"/>
      <Record.Param name="memberName" type="Identifier"/>
    </Record>
    <Record name="placeholder">
      <Record.Param name="id" type="UUID"/>
    </Record>
  </Type>
  <Type name="Statement">
    <Record name="loop">
      <Record.Param name="pattern" type="Pattern"/>
      <Record.Param name="expression" type="Expression"/>
      <Record.Param name="block" type="List">
        <Record.Substitution generic="T" instance="Statement"/>
      </Record.Param>
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="branch">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="condition" type="Expression"/>
      <Record.Param name="block" type="List">
        <Record.Substitution generic="T" instance="Statement"/>
      </Record.Param>
    </Record>
    <Record name="declaration">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="content" type="Declaration"/>
    </Record>
    <Record name="expressionStatement">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="expression" type="Expression"/>
    </Record>
    <Record name="placeholder">
      <Record.Param name="id" type="UUID"/>
    </Record>
  </Type>
  <Type name="Program">
    <Record name="program">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="block" type="List">
        <Record.Substitution generic="T" instance="Statement"/>
      </Record.Param>
    </Record>
  </Type>
  <Type name="SyntaxNode">
    <Case name="statement">
      <Case.Param type="Statement"/>
    </Case>
    <Case name="declaration">
      <Case.Param type="Declaration"/>
    </Case>
    <Case name="identifier">
      <Case.Param type="Identifier"/>
    </Case>
    <Case name="expression">
      <Case.Param type="Expression"/>
    </Case>
    <Case name="pattern">
      <Case.Param type="Pattern"/>
    </Case>
    <Case name="binaryOperator">
      <Case.Param type="BinaryOperator"/>
    </Case>
    <Case name="program">
      <Case.Param type="Program"/>
    </Case>
    <Case name="functionParameter">
      <Case.Param type="FunctionParameter"/>
    </Case>
    <Case name="functionParameterDefaultValue">
      <Case.Param type="FunctionParameterDefaultValue"/>
    </Case>
    <Case name="typeAnnotation">
      <Case.Param type="TypeAnnotation"/>
    </Case>
    <Case name="literal">
      <Case.Param type="Literal"/>
    </Case>
    <Case name="topLevelParameters">
      <Case.Param type="TopLevelParameters"/>
    </Case>
    <Case name="enumerationCase">
      <Case.Param type="EnumerationCase"/>
    </Case>
    <Case name="genericParameter">
      <Case.Param type="GenericParameter"/>
    </Case>
    <Case name="topLevelDeclarations">
      <Case.Param type="TopLevelDeclarations"/>
    </Case>
    <Case name="comment">
      <Case.Param type="Comment"/>
    </Case>
  </Type>
  <Type name="FunctionParameter">
    <Record name="parameter">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="externalName" type="Optional">
        <Record.Substitution generic="Value" instance="String"/>
      </Record.Param>
      <Record.Param name="localName" type="Pattern"/>
      <Record.Param name="annotation" type="TypeAnnotation"/>
      <Record.Param name="defaultValue" type="FunctionParameterDefaultValue"/>
    </Record>
    <Record name="placeholder">
      <Record.Param name="id" type="UUID"/>
    </Record>
  </Type>
  <Type name="FunctionParameterDefaultValue">
    <Record name="none">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="value">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="expression" type="Expression"/>
    </Record>
  </Type>
  <Type name="TypeAnnotation">
    <Record name="typeIdentifier">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="identifier" type="Identifier"/>
      <Record.Param name="genericArguments" type="List">
        <Record.Substitution generic="T" instance="TypeAnnotation"/>
      </Record.Param>
    </Record>
    <Record name="functionType">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="returnType" type="TypeAnnotation"/>
      <Record.Param name="argumentTypes" type="List">
        <Record.Substitution generic="T" instance="TypeAnnotation"/>
      </Record.Param>
    </Record>
    <Record name="placeholder">
      <Record.Param name="id" type="UUID"/>
    </Record>
  </Type>
  <Type name="Literal">
    <Record name="none">
      <Record.Param name="id" type="UUID"/>
    </Record>
    <Record name="boolean">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="value" type="Bool"/>
    </Record>
    <Record name="number">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="value" type="CGFloat"/>
    </Record>
    <Record name="string">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="value" type="String"/>
    </Record>
    <Record name="color">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="value" type="String"/>
    </Record>
    <Record name="array">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="value" type="List">
        <Record.Substitution generic="T" instance="Expression"/>
      </Record.Param>
    </Record>
  </Type>
  <Type name="TopLevelParameters">
    <Record name="topLevelParameters">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="parameters" type="List">
        <Record.Substitution generic="T" instance="FunctionParameter"/>
      </Record.Param>
    </Record>
  </Type>
  <Type name="GenericParameter">
    <Record name="parameter">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="name" type="Pattern"/>
    </Record>
    <Record name="placeholder">
      <Record.Param name="id" type="UUID"/>
    </Record>
  </Type>
  <Type name="TopLevelDeclarations">
    <Record name="topLevelDeclarations">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="declarations" type="List">
        <Record.Substitution generic="T" instance="Declaration"/>
      </Record.Param>
    </Record>
  </Type>
  <Type name="Comment">
    <Record name="comment">
      <Record.Param name="id" type="UUID"/>
      <Record.Param name="string" type="String"/>
    </Record>
  </Type>
</root>